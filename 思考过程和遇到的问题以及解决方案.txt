1.加载提供的数据；
思路：这一步先要将csv文件从外部加载进来，一开始试图在vue.config.js配置文件配置.csv扩展名让webpack能处理，失败，于是切换成通过axios以http请求的方式加载文件。
加载成功之后，还要对数据进行解析，用到了papaparse工具。

2.以列表的形式展示账单内容，并且提供下拉框选择月份进行筛选，其中列表中所展示的账单为选择月份的账单；
思路：加载好数据之后发现数据并不规整，第一行的表头不用显示出来，于是用Lodash对数组进行了截取，而且还设置了原始数组和处理之后的数组，防止对原始数据产生不必要的影响。
然后又发现数据是二维数组，并不是常见的JSON格式，但是也能显示，于是暂时就以数组下标的形式来展示数据。月份下拉框首先对选择的值进行格式化处理，加载的数据也通过moment工具进行了处理，再通过月份比较对数据作了筛选。

3.支持使用者添加账单；
思路：这一步我的理解是将新数据追加到原来的记录上并回写到csv文件中。先提供一个弹窗供用户输入新账单信息，弹窗时有重置和初始化数据操作，这两步要弹窗DOM加载完再重置，否则会报错。
然后提交表单时要检验，再将表单数据追加到初步过滤后的列表数据中，再将csv数组转换成json数据，最后导出json数据到csv文件中。
其中表单中的日期处理遇到一些问题，一开始对日期选择器的格式化值和moment设置当前日期都不对，导致因为时差问题少8个小时的毫秒数，
后来发现日期选择器的格式化值可以直接设置为时间戳，设置默认日期也不需要用moment，试一下果然好了。

4.简单地统计并展示所选月份的收入和支出总金额。
思路：这一步通过对日期过滤后的记录用类型再次过滤再求和，就可以统计出所选月份的收入和支出总金额。

5.对账单分类进行二次筛选；
思路：这一步在搜索区添加一个账单分类下拉框，让账单时间和账单分类联合起来，即可完成二次筛选。

6.对选择月份内的所有账单根据账单分类进行支出金额统计，并进行排序。
思路：这一步将按账单时间和账单分类进行过滤之后的数据，再按照账单分类进行分组，分组后立即进行支出统计，再排序，再转换回来用于显示，最后再统计总的收入和支出。
其中联合查询那里容易出现混乱，需要根据每个查询条件设置单独的标志位，最后再进行联合判断从而满足该条件参与和不参与的两种情况。